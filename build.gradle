plugins {
    // see https://fabricmc.net/develop/ for new versions
    id 'fabric-loom' version '1.7-SNAPSHOT' apply false
    // see https://projects.neoforged.net/neoforged/moddevgradle for new versions
    id 'net.neoforged.moddev' version '0.1.110' apply false

    //publisher
    id "com.hypherionmc.modutils.modpublisher" version "2.1.6" apply false
}

//custom task
tasks.register('copyJars', Copy) {

    dependsOn ':fabric:build', ':neoforge:build' // Make sure subprojects are built

    from('fabric/build/libs') {
        include("*${project.version}.jar")
        exclude('*-javadoc.jar', '*-sources.jar', '*-orphaned.jar')
    }

    from('neoforge/build/libs') {
        include("*${project.version}.jar")
        exclude('*-javadoc.jar', '*-sources.jar', '*-orphaned.jar')
    }

    into 'build/'
}

// Trigger the copyJars task after the subprojects' builds are done
gradle.projectsEvaluated {
    copyJars.mustRunAfter ':fabric:build', ':neoforge:build'
}

// Add a custom task to trigger the copy process
tasks.register('buildAll') {
    group = 'build'  // Assign to a visible group in Gradle tab
    description = 'Builds and copies the main JARs from subprojects to the root build folder.'

    //delete(fileTree("build/"))
    dependsOn ':fabric:build', ':neoforge:build', copyJars
}

// Tasks for publish
tasks.register('publishAllToModrinth') {
    group = 'publish'  // Assign to a visible group in Gradle tab
    description = 'Publish all subproject artifacts to Modrinth'

    //delete(fileTree("build/"))
    dependsOn ':fabric:publishModrinth', ':neoforge:publishModrinth'
}

tasks.register('publishAllToCurseforge') {
    group = 'publish'  // Assign to a visible group in Gradle tab
    description = 'Publish all subproject artifacts to Curseforge'

    //delete(fileTree("build/"))
    dependsOn ':fabric:publishCurseforge', ':neoforge:publishCurseforge'
}

tasks.register('publishAllToAll') {
    group = 'publish'  // Assign to a visible group in Gradle tab
    description = 'Publish all subproject artifacts to Modrinth and Curseforge'


    //delete(fileTree("build/"))
    dependsOn publishAllToModrinth, publishAllToCurseforge
}

//publisher
subprojects { subproject ->
    apply plugin: 'java'
    apply plugin: 'com.hypherionmc.modutils.modpublisher'


    subproject.afterEvaluate {
        publisher {
            apiKeys {
                modrinth System.getenv("MODRINTH_TOKEN")
                curseforge System.getenv("CURSEFORGE_TOKEN")
            }

            setDebug(!confirm_publish.toBoolean())

            setGameVersions(minecraft_version, "1.21.1")
            setVersion(project.version)
            setChangelog(file("${subproject.rootDir}/CHANGELOG.md"))
            setVersionType(version_type)

            // Set different artifacts for each subproject
            setArtifact("${subproject.rootDir}/build/${mod_id}-${subproject.name}-${minecraft_version}-${project.version}.jar")
            setDisableMalwareScanner(true)
            setDisableEmptyJarCheck(true)
            setModrinthID(modrinth_id)
            setCurseID(curseforge_id)

            // Configure loaders and dependencies per subproject
            switch (subproject.name) {
                case "fabric":
                    setLoaders("Fabric", "Quilt")
                    setDisplayName("[Fabric ${minecraft_version}] ${mod_name} v${project.version}")
                    modrinthDepends {
                        required "fabric-api"
                    }
                    curseDepends {
                        required "fabric-api"
                    }
                    break
                case "forge":
                    setLoaders("Forge", "NeoForge")
                    setDisplayName("[Forge ${minecraft_version}] ${mod_name} v${project.version}")
                    break
                case "neoforge":
                    setLoaders("NeoForge")
                    setDisplayName("[NeoForge ${minecraft_version}] ${mod_name} v${project.version}")
                    break
            }
        }
    }
}