plugins {
    id 'fabric-loom' version '1.6-SNAPSHOT'
    id 'maven-publish'
    id "dev.kikugie.j52j" version "1.0"
}

repositories {
    maven {
        name = "Terraformers"
        url = "https://maven.terraformersmc.com/"
    }

    maven {
        url = "https://api.modrinth.com/maven"
    }

    maven { url 'https://maven.nucleoid.xyz' }
}

version = project.mod_version + "+" + property('debs.minecraft_version')
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

loom {
    splitEnvironmentSourceSets()
    mods {
        "diversity" {
            sourceSet sourceSets.main
            sourceSet sourceSets.client
        }
    }

    runConfigs.all {
        ideConfigGenerated true // Run configurations are not created for subprojects by default
        runDir "../../run" // Use a shared run folder and just create separate worlds
    }
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${property('debs.minecraft_version')}"
    mappings "net.fabricmc:yarn:${property('debs.yarn_mappings')}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${property('debs.fabric_version')}"

    //extra lib
    implementation(include("org.reflections:reflections:0.10.2"))

    //for the f sake
    include group: 'org.javassist', name: 'javassist', version: '3.28.0-GA'

    //permission
    include(modImplementation('me.lucko:fabric-permissions-api:0.3.1'))

    modImplementation("com.terraformersmc:modmenu:${property('debs.modmenu')}")
    //config
    include(modImplementation("maven.modrinth:midnightlib:${property('debs.midnightlib')}"))

    modImplementation include("eu.pb4:polymer-core:${property('debs.polymer_core')}")
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 21
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}" }
    }
}

// configure the maven publication
publishing {
    publications {
        create("mavenJava", MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}